{"version":3,"sources":["james/map/map.js","james/floodBackground/floodBackground.js","josh/About/About.js","james/home/home.js","App.js","serviceWorker.js","index.js"],"names":["Map","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","initViz","vizContainer","window","tableau","Viz","width","height","_this","react_default","a","createElement","className","ref","div","React","Component","FloodBackground","About","src","Home","props","call","state","hideTopButton","_this2","Events","scrollEvent","register","to","element","console","log","setState","undefined","scrollSpy","update","remove","scroll","scrollToTop","_this3","modules","spy","smooth","duration","name","index_esm","floodBackground_FloodBackground","About_About","onClick","map_Map","createBrowserHistory","App","home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd6ea3f3.chunk.js","sourcesContent":["import React from \"react\";\nimport tableau from \"tableau-api\";\nimport \"./map.css\";\n\nexport class Map extends React.Component {\n  componentDidMount() {\n    this.initViz();\n  }\n\n  initViz() {\n    const vizUrl = \"https://public.tableau.com/shared/XNYDSZ85Q?:display_count=yes&:origin=viz_share_link\";\n    const vizContainer = this.vizContainer;\n    let viz = new window.tableau.Viz(vizContainer, vizUrl, { width: \"90vw\", height: \"90vh\"});\n  }\n\n  render() {\n      return (\n        <div className=\"map-wrapper\">\n            <div className=\"map\" ref={(div) => { this.vizContainer = div; }}></div>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./floodBackground.css\";\nexport const FloodBackground = () => (\n    <div>\n        <div className=\"houston\">\n            <div className=\"waveTop\" />\n            <div className=\"waveBottom\" />\n        </div>\n        <div className=\"waves\"/>\n    </div>\n);\n","import React from \"react\";\nimport \"./about.css\";\n\nexport const About = () => (\n    <div className=\"about-component\">\n\n        <div className=\"about-content_wrapper\">\n            <h1 className=\"about-title\">About the Project</h1>\n            <div className=\"image-wrapper\"><img src=\"https://cdn.cnn.com/cnnnext/dam/assets/170829182744-23-harvey-0829-exlarge-169.jpg\" /></div>\n        </div>\n        <div className=\"about-info\">\n            <p>\n                As part of the 2019 Houston Hackathon, a group of developers and\n                data scientist came together to analyze how Harvey and the changing\n                flood plain is affecting the city. In particular, one question that arose\n                was how the effect of decreased property values impacted the tax base of\n                Houston.\n            </p>\n\n        </div>\n    </div>\n);","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Map } from \"../map/map\";\nimport { FloodBackground } from \"../floodBackground/floodBackground\";\nimport { About } from \"../../josh/About/About\";\nimport { FaChevronDown, FaChevronCircleUp } from \"react-icons/fa\";\n\nimport \"./home.css\";\n\n// ES6 Imports\nimport * as Scroll from \"react-scroll\";\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from \"react-scroll\";\n\nexport class Home extends React.Component {\n\n    constructor(props) {\n        super( props );\n        this.state = {\n            hideTopButton:  false,\n        };\n    }\n\n    componentDidMount() {\n        Events.scrollEvent.register( \"begin\", ( to, element ) => {\n            console.log( \"begin\", to );\n        } );\n\n        Events.scrollEvent.register( \"end\", ( to, element ) => {\n            this.setState( { hideTopButton: to === undefined } );\n\n        } );\n\n        scrollSpy.update();\n\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove( \"begin\" );\n        Events.scrollEvent.remove( \"end\" );\n    }\n\n    scrollToTop() {\n        scroll.scrollToTop();\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"navbar\">\n                    <Link to=\"homeSection\" spy={true} smooth={true} duration={500}>\n                        <h5>Home</h5>\n                    </Link>\n                    <Link to=\"aboutSection\" spy={true} smooth={true} duration={500}>\n                        <h5>About</h5>\n                    </Link>\n                    <Link to=\"mapSection\" spy={true} smooth={true} duration={500}>\n                        <h5>Map</h5>\n                    </Link>\n                </div>\n                <Element name=\"homeSection\">\n                <div>\n                    <div className=\"title-wrapper\">\n                        <Link to=\"mapSection\" spy={true} smooth={true} duration={500}>\n                            <FaChevronDown className=\"down-button\" />\n                        </Link>\n                        <div className=\"title-contents\">\n                            <h1>RAIN PAIN</h1>\n                            <div className=\"raindrop-logo\"></div>\n                        </div>\n                        <FloodBackground />\n                    </div>\n                    </div>\n                </Element>\n\n                <Element name=\"aboutSection\">\n                    <About />\n                </Element>\n\n                <Element name=\"mapSection\">\n                    <div className=\"about-section\">\n                        {!this.state.hideTopButton ?\n                            <a className=\"top-button-wrapper\" onClick={() => this.scrollToTop()}>\n                                <FaChevronCircleUp className=\"top-button\" /></a> : null}\n                        <Map/>\n                    </div>\n                </Element>\n\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Router, Route } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { Home } from \"./james/home/home\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}